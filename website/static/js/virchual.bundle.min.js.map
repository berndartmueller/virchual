{"version":3,"file":"virchual.bundle.min.js","sources":["../src/utils/event.ts","../src/components/controls/controls.ts","../src/utils/dom.ts","../src/utils/debouncer.ts","../src/utils/utils.ts","../src/utils/sliding-window.ts","../src/components/lazyload-image/lazyload-image.ts","../src/drag.ts","../src/pagination.ts","../src/slide.ts","../src/virchual.ts","../src/utils/error.ts","../entry/entry-complete.ts"],"sourcesContent":["export function stop(event: MouseEvent | TouchEvent) {\n  if (!event) return;\n\n  event.stopImmediatePropagation();\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nexport type EventHandler = (...args: unknown[]) => void;\nexport type EventTarget = (Window & typeof globalThis) | Element;\nexport type EventOptions = boolean | AddEventListenerOptions;\n\nexport class Event {\n  /**\n   * Store all event this.data.\n   */\n  private handlers: Array<{\n    event: string;\n    handler: EventHandler;\n    elm: EventTarget;\n    opts: EventOptions;\n  }> = [];\n\n  /**\n   * Subscribe the given event(s).\n   *\n   * @param events  - An event name. Use space to separate multiple events.\n   *                  Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n   * @param handler - A callback function.\n   * @param element - Optional. Native event will be listened to when this arg is provided.\n   * @param opts - Optional. Options for addEventListener.\n   */\n  on(events: string, handler: EventHandler, element?: EventTarget, opts?: EventOptions): void;\n  on(events: { [event: string]: EventHandler }, element?: EventTarget, opts?: EventOptions): void;\n  on(\n    events: string | { [event: string]: EventHandler },\n    handler?: EventHandler | EventTarget,\n    element?: EventTarget | EventOptions,\n    opts: EventOptions = {},\n  ): void {\n    if (typeof events === 'string') {\n      events.split(' ').forEach(event => this.addEvent(event, element as EventTarget, handler as EventHandler, opts));\n    } else {\n      for (const event in events) {\n        this.addEvent(event, handler as EventTarget, events[event], opts);\n      }\n    }\n  }\n\n  /**\n   * Unsubscribe the given event(s).\n   *\n   * @param events - A event name or names split by space.\n   * @param element - Optional. removeEventListener() will be called when this arg is provided.\n   */\n  off(events: string, element?: EventTarget): void;\n  off(events: { [event: string]: EventHandler }, element?: EventTarget): void;\n  off(events: string | { [event: string]: EventHandler }, element?: EventTarget) {\n    if (typeof events === 'string') {\n      events.split(' ').forEach(event => this.removeEvent(event, element));\n    } else {\n      for (const event in events) {\n        this.removeEvent(event, element);\n      }\n    }\n  }\n\n  /**\n   * Emit an event.\n   * This method is only for custom events.\n   *\n   * @param event - An event name.\n   * @param args  - Any number of arguments passed to handlers.\n   */\n  emit(event: string, ...args: unknown[]) {\n    this.handlers.forEach(item => {\n      if (!item.elm && item.event.split('.')[0] === event) {\n        item.handler(...args);\n      }\n    });\n  }\n\n  /**\n   * Clear event this.data.\n   */\n  destroy() {\n    this.handlers.forEach(this.unroll);\n    this.handlers = [];\n  }\n\n  /**\n   * Remove the registered event listener.\n   *\n   * @param item - An object containing event this.data.\n   */\n  private unroll(item: Event['handlers'][0]) {\n    item.elm && item.elm.removeEventListener(item.event, item.handler, item.opts);\n  }\n\n  private addEvent(event: string, element: EventTarget, handler: EventHandler, opts: EventOptions) {\n    element && element.addEventListener(event, handler, opts);\n\n    this.handlers.push({ event, handler: handler as EventHandler, elm: element as EventTarget, opts: opts });\n  }\n\n  private removeEvent(event: string, element: EventTarget) {\n    this.handlers = this.handlers.filter(item => {\n      if (item && item.event === event && item.elm === element) {\n        this.unroll(item);\n\n        return false;\n      }\n\n      return true;\n    });\n  }\n}\n","import { identity } from '../../types';\nimport { stop } from '../../utils/event';\nimport { ComponentDependencies } from './../component';\n\nexport type ControlsSettings = { isEnabled?: boolean };\n\nexport class Controls {\n  private controls: HTMLButtonElement[];\n  private onClickBound: () => identity;\n\n  constructor(private imports: ComponentDependencies, private settings?: ControlsSettings) {\n    this.controls = [].slice.call(imports.virchual.container.querySelectorAll('.virchual__control'));\n\n    imports.eventBus.on('destroy', () => {\n      console.log('controls component destroy');\n    });\n\n    this.onClickBound = this.onClick.bind(this);\n\n    this.mount();\n  }\n\n  mount(): void {\n    this.controls.forEach(button => this.imports.eventBus.on('click', this.onClickBound, button));\n  }\n\n  private onClick(event: MouseEvent) {\n    stop(event);\n\n    const button: HTMLButtonElement = (event.target as Element).closest('button') as HTMLButtonElement;\n    const control = button.dataset.controls as 'prev' | 'next';\n\n    if (control === 'prev') {\n      this.imports.virchual.prev();\n\n      return;\n    }\n\n    this.imports.virchual.next();\n  }\n}\n","export function createElement(tagName: string, { classNames, html }: { classNames?: string; html?: string }) {\n  const element = document.createElement(tagName);\n\n  element.className = classNames;\n  element.innerHTML = html || '';\n\n  return element;\n}\n\n/**\n * Remove a given element from a DOM tree.\n *\n * @param elms - Element(s) to be removed.\n */\nexport function remove(element: HTMLElement) {\n  if (element && element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Append a child to a given element.\n *\n * @param parent - A parent element.\n * @param child  - An element to be appended.\n */\nexport function append(parent: HTMLElement, child: HTMLElement) {\n  if (parent) {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Prepend an element to parent.\n *\n * @param element- An element to prepend.\n * @param element - A reference element.\n */\nexport function prepend(parent: HTMLElement, element: HTMLElement) {\n  if (parent && parent.firstChild && element) {\n    parent.insertBefore(element, parent.firstChild);\n  }\n}\n\n/**\n * Add or remove css class to given element.\n *\n * @param element Element to add class tp.\n * @param klass CSS classname.\n * @param remove Remove class instead of adding.\n */\nexport function addOrRemoveClass(element: HTMLElement, klass: string, remove = false) {\n  if (!remove) {\n    element.classList.add(klass);\n\n    return;\n  }\n\n  element.classList.remove(klass);\n}\n","/**\n * Handles debouncing of events via requestAnimationFrame\n *\n * @param callback The callback to handle whichever event\n */\nexport function debounce(callback: (...args: unknown[]) => unknown, delay = 100) {\n  let timeoutId: NodeJS.Timeout;\n\n  return (...args: unknown[]) => {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(\n      () =>\n        requestAnimationFrame(() => {\n          timeoutId = null;\n\n          callback(...args);\n        }),\n      delay,\n    );\n  };\n}\n","export function range(start: number, end: number): number[] {\n  return Array(end - start + 1)\n    .fill(0)\n    .map((_, idx) => start + idx);\n}\n\n/*\n * Rewind the given index if it's out of range.\n *\n * @param index - An index.\n * @param edge - Edge\n *\n * @return A rewound index.\n */\nexport function rewind(index: number, edge: number): number {\n  if (index > edge) {\n    return 0;\n  }\n\n  if (index < 0) {\n    return edge;\n  }\n\n  return index;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n","import { range } from './utils';\n\n/**\n * Returns a sliding window section of an array.\n *\n * @param source Source array.\n * @param start The start of the specified portion of the array. Acts as the center of the sliding window.\n * @param len The window size/length. Specifies how many items the window has on each sides.\n */\nexport function slidingWindow(source: number[], start: number, len: number): number[] {\n  const left = range(start - len, start - 1).map(index => get(source, index));\n  const center = [source[start]];\n  const right = range(start + 1, start + len).map(index => get(source, index));\n\n  const window = [...left, ...center, ...right];\n\n  return window;\n}\n\n/**\n * Get array item by index.\n *\n * Returning items from the end of the source array when accessing negative indexes or\n * from the start of source array when accessing out of range indexes.\n *\n * @param source Source array.\n * @param index Index of array item to access.\n */\nexport function get<T>(source: T[], index: number): T {\n  if (source.length === 0) {\n    return;\n  }\n\n  const isOutOfLowerBounds = index < 0;\n  const isOutOfUpperBounds = index > source.length - 1;\n  const isOutOfBounds = isOutOfLowerBounds || isOutOfUpperBounds;\n\n  const sign = isOutOfUpperBounds ? -1 : +1;\n  const multiple = Math.max(Math.floor(Math.abs(index) / source.length), 1);\n\n  if (isOutOfBounds) {\n    index += sign * multiple * source.length;\n  }\n\n  return source[index];\n}\n","import { ComponentDependencies } from './../component';\nimport { slidingWindow, range } from '@virchual/utils/index';\n\nexport type LazyLoadImageSettings = {\n  /**\n   * Enables lazyloading imagest that are currently not visible, thus saving bandwidth.\n   */\n  lazyload?: boolean;\n\n  /**\n   * The CSS selector for lazyloaded images. Default 'img,picture'\n   */\n  lazyloadSelector?: string;\n};\n\nconst LAZY_CLASSNAME = 'virchual__lazy';\nconst LOADING_CLASSNAME = `${LAZY_CLASSNAME}--loading`;\nconst ERROR_CLASSNAME = `${LAZY_CLASSNAME}--failed`;\nconst COMPLETE_CLASSNAME = `${LAZY_CLASSNAME}--loaded`;\n\n/**\n * Return true if given elemen is a <picture> tag.\n *\n * @param element HTML Element.\n */\nfunction isPictureTag(element: HTMLElement): boolean {\n  return element && element.nodeName.toLowerCase() === 'picture';\n}\n\n/**\n * Return either parent <picture> tag or <img> tag.\n *\n * @param element Image HTML tag.\n */\nfunction getImage(image: HTMLImageElement | HTMLPictureElement): HTMLImageElement | HTMLPictureElement {\n  const picture = image.parentNode as HTMLElement;\n\n  if (isPictureTag(picture)) {\n    return picture;\n  }\n\n  return image;\n}\n\nexport class LazyLoadImage {\n  private lazyload: boolean;\n  private lazyloadSelector: string;\n  private events: {\n    load: LazyLoadImage['onLoad'];\n    error: LazyLoadImage['onError'];\n  };\n\n  constructor(private imports: ComponentDependencies, settings: LazyLoadImageSettings) {\n    const { lazyload, lazyloadSelector } = {\n      lazyload: true,\n      lazyloadSelector: 'img,picture',\n      ...settings,\n    };\n\n    this.lazyload = lazyload;\n    this.lazyloadSelector = lazyloadSelector;\n    this.events = {\n      load: this.onLoad.bind(this),\n      error: this.onError.bind(this),\n    };\n\n    // exit in case lazy loading is disabled\n    if (!this.lazyload) {\n      return;\n    }\n\n    imports.eventBus.on({\n      mounted: () => {\n        this.doLazyLoad();\n      },\n      move: () => {\n        this.doLazyLoad();\n      },\n    });\n  }\n\n  /**\n   * Lazy load images.\n   */\n  private doLazyLoad(): void {\n    const images = this.getImages();\n\n    images.forEach(image => this.loadImage(image));\n  }\n\n  /**\n   * Get all image tags (<img>, <picture>) to lazy load.\n   */\n  private getImages() {\n    const indices = range(0, this.imports.virchual.slides.length - 1);\n    const slidesWindowIndices = slidingWindow(indices, this.imports.virchual.currentIndex, 1);\n\n    const images: Array<HTMLImageElement | HTMLPictureElement> = [];\n\n    slidesWindowIndices.forEach(index => {\n      const slide = this.imports.virchual.slides[index];\n\n      if (!slide.isMounted) {\n        return;\n      }\n\n      [].forEach.call(slide.ref.querySelectorAll(this.lazyloadSelector), (img: HTMLElement) => {\n        // skip <img> tags within <picture> tags\n        if (isPictureTag(img.parentElement)) {\n          return;\n        }\n\n        images.push(img);\n      });\n    });\n\n    return images;\n  }\n\n  /**\n   * Do the actual lazy loading for a given image.\n   *\n   * @param image Either <img> or <picture> tag.\n   */\n  private loadImage(image: HTMLImageElement | HTMLPictureElement) {\n    let hasLazyImages = false;\n\n    [].forEach.call(image.querySelectorAll('img,source'), (source: HTMLImageElement | HTMLSourceElement) => {\n      const srcSetData = source.dataset.srcset;\n      const srcData = source.dataset.src;\n\n      if (srcSetData) {\n        source.setAttribute('srcset', srcSetData);\n        source.removeAttribute('data-srcset');\n      }\n\n      // source is <img>\n      if (srcData) {\n        source.setAttribute('src', source.dataset.src);\n        source.removeAttribute('data-src');\n\n        this.imports.eventBus.on(this.events, source);\n      }\n\n      if (srcSetData || srcData) {\n        hasLazyImages = true;\n      }\n    });\n\n    if (hasLazyImages) {\n      image.classList.add(LAZY_CLASSNAME);\n      image.classList.add(LOADING_CLASSNAME);\n    }\n  }\n\n  private onLoad(event: Event) {\n    const image = event.target as HTMLImageElement;\n\n    this.completeLoading(image);\n  }\n\n  private onError(event: Event) {\n    const image = event.target as HTMLImageElement;\n    const target = getImage(image);\n\n    target.classList.add(ERROR_CLASSNAME);\n\n    this.completeLoading(image);\n  }\n\n  private completeLoading(image: HTMLImageElement) {\n    const target = getImage(image);\n\n    target.classList.remove(LOADING_CLASSNAME);\n    target.classList.add(COMPLETE_CLASSNAME);\n\n    this.imports.eventBus.off(this.events, image);\n  }\n}\n","import { identity } from './types';\nimport { debounce } from './utils/debouncer';\nimport { Event, stop } from './utils/event';\n\nexport class Drag {\n  // Analyzed info on starting drag.\n  private startInfo;\n\n  // Analyzed info being updated while dragging/swiping.\n  private currentInfo;\n\n  // Determine whether slides are being dragged or not.\n  private isDragging = false;\n\n  private eventBus: Event;\n\n  // bound event handlers (to keep `this` context)\n  private eventBindings: {\n    onStart: identity;\n    onMove: identity;\n    onEnd: identity;\n  };\n\n  constructor(private frame: HTMLElement, { event }: { event: Event }) {\n    this.eventBus = event;\n\n    this.eventBindings = {\n      onStart: this.onStart.bind(this),\n      onMove: debounce(this.onMove.bind(this), 1),\n      onEnd: this.onEnd.bind(this),\n    };\n  }\n\n  mount() {\n    this.eventBus.on('touchstart mousedown', this.eventBindings.onStart, this.frame);\n    this.eventBus.on('touchmove mousemove', this.eventBindings.onMove, this.frame, { passive: false });\n    this.eventBus.on('touchend touchcancel mouseleave mouseup dragend', this.eventBindings.onEnd, this.frame);\n  }\n\n  /**\n   * Called when the track starts to be dragged.\n   */\n  private onStart(event: MouseEvent & TouchEvent) {\n    stop(event);\n\n    if (!this.isDragging) {\n      this.startInfo = this.analyze(event, {});\n\n      this.currentInfo = this.startInfo;\n\n      this.eventBus.emit('dragstart', this.currentInfo);\n    }\n  }\n\n  private onMove(event: MouseEvent & TouchEvent) {\n    stop(event);\n\n    if (!this.startInfo) {\n      return;\n    }\n\n    this.currentInfo = this.analyze(event, this.startInfo);\n\n    if (this.isDragging) {\n      stop(event);\n\n      this.eventBus.emit('drag', this.currentInfo);\n    } else {\n      if (this.shouldMove(this.currentInfo)) {\n        this.eventBus.emit('drag', this.currentInfo);\n\n        this.isDragging = true;\n      }\n    }\n  }\n\n  /**\n   * Determine whether to start moving the track or not by drag angle.\n   *\n   * @param info - An information object.\n   *\n   * @return True if the track should be moved or false if not.\n   */\n  private shouldMove({ offset }) {\n    const angle = (Math.atan(Math.abs(offset.y) / Math.abs(offset.x)) * 180) / Math.PI;\n\n    const dragAngleThreshold = 45;\n\n    return angle < dragAngleThreshold;\n  }\n\n  /**\n   * Called when dragging ends.\n   */\n  private onEnd() {\n    this.startInfo = null;\n\n    if (this.isDragging) {\n      this.goTo(this.currentInfo);\n\n      this.isDragging = false;\n    }\n  }\n\n  /**\n   * Go to the slide determined by the analyzed data.\n   *\n   * @param info - An info object.\n   */\n  private goTo(info) {\n    const velocity = info.velocity['x'];\n    const absV = Math.abs(velocity);\n\n    if (absV > 0) {\n      this.eventBus.emit('dragend', this.currentInfo);\n    }\n  }\n\n  /**\n   * Analyze the given event object and return important information for handling swipe behavior.\n   *\n   * @param event          - Touch or Mouse event object.\n   * @param startInfo  - Information analyzed on start for calculating difference from the current one.\n   *\n   * @return - An object containing analyzed information, such as offset, velocity, etc.\n   */\n  private analyze(\n    event: MouseEvent & TouchEvent,\n    startInfo,\n  ): {\n    to: { x: number; y: number };\n    offset: { x: number; y: number };\n    velocity: { x: number; y: number };\n    time: number;\n    control: 'prev' | 'next';\n  } {\n    const { timeStamp, touches } = event;\n    const { clientX, clientY } = touches ? touches[0] : event;\n    const { x: fromX = clientX, y: fromY = clientY } = startInfo.to || {};\n\n    const startTime = startInfo.time || 0;\n    const offset = { x: clientX - fromX, y: clientY - fromY };\n    const duration = timeStamp - startTime;\n    const velocity = { x: offset.x / duration, y: offset.y / duration };\n\n    return {\n      offset,\n      velocity,\n      to: { x: clientX, y: clientY },\n      time: timeStamp,\n      control: velocity.x < 0 ? 'next' : 'prev',\n    };\n  }\n}\n","import { Sign } from './types';\nimport { addOrRemoveClass, append, prepend, remove, createElement } from './utils/dom';\nimport { range, rewind } from './utils/utils';\n\n/**\n * Map current index to bullet elements index.\n *\n * @param index Current index.\n * @param center Center index of bullets (5 bullets -> center: 2).\n * @param total Total bullets. Same as amount of slides.\n */\nexport function mapActiveIndex(index: number, center: number, total: number) {\n  return index - Math.max(index - center, 0) + Math.max(index - (-1 + total - center), 0);\n}\n\n/**\n * Return true if bullet is edge bullet.\n *\n * @param index Index of bullet.\n * @param realIndex Real slide index which bullet represents.\n * @param bullets Amount of shown bullets.\n * @param total Total bullets. Same as amount of slides.\n */\nexport function isEdgeBullet(index: number, realIndex: number, bullets: number, total: number) {\n  const isRightEdge = index === bullets - 1;\n\n  // bullet is either left or right edge\n  if (index === 0) {\n    return index !== realIndex;\n  }\n\n  if (isRightEdge) {\n    return realIndex + 1 < total;\n  }\n\n  return false;\n}\n\n/**\n * Get real index of bullet.\n *\n * @param index Index of bullet.\n * @param currentIndex Current active index.\n * @param activeBulletIndex Index of active bullet element.\n */\nfunction getRealIndex(index: number, currentIndex: number, activeBulletIndex: number) {\n  return currentIndex - activeBulletIndex + index;\n}\n\nexport class Pagination {\n  private ref: HTMLElement;\n  private currentIndex = 0;\n  private centerIndex: number;\n  private bulletsLength: number;\n  private diameter: number;\n\n  constructor(\n    private container: HTMLElement,\n    private totalSlides: number,\n    { diameter, bullets }: { diameter?: number; bullets?: number } = {},\n  ) {\n    this.ref = container.querySelector('.virchual__pagination');\n\n    this.bulletsLength = Math.min(totalSlides, bullets ?? 5);\n    this.diameter = diameter ?? 16;\n\n    this.centerIndex = Math.floor(this.bulletsLength / 2);\n  }\n\n  render() {\n    this.ref = createElement('div', { classNames: 'virchual__pagination' });\n\n    this.ref.style.width = `${this.bulletsLength * this.diameter}px`;\n    this.ref.style.height = `${this.diameter}px`;\n\n    range(0, Math.min(this.bulletsLength, this.totalSlides) - 1).forEach(index => {\n      const isEdge = isEdgeBullet(index, index, this.bulletsLength, this.totalSlides);\n\n      const bullet = this.renderBullet(index, { isEdge, isActive: index === this.currentIndex });\n\n      append(this.ref, bullet);\n    });\n\n    append(this.container, this.ref);\n  }\n\n  next() {\n    this.goTo(+1);\n  }\n\n  prev() {\n    this.goTo(-1);\n  }\n\n  private goTo(sign: Sign) {\n    this.currentIndex = rewind(this.currentIndex + sign, this.totalSlides - 1);\n\n    const mappedActiveIndex = mapActiveIndex(this.currentIndex, this.centerIndex, this.totalSlides);\n    const removeBullet = mappedActiveIndex === this.centerIndex && this.currentIndex > this.centerIndex;\n    const removeBulletIndex = removeBullet ? (sign === 1 ? 0 : this.bulletsLength - 1) : -1;\n\n    const bullets = [].slice.call(this.ref.querySelectorAll('span')) as HTMLElement[];\n\n    bullets.forEach((bullet, index) => {\n      this.handleBulletMovement({ bullet, index, sign, removeBullet, removeBulletIndex, activeIndex: mappedActiveIndex });\n    });\n\n    // append or prepend new bullet\n    if (removeBullet) {\n      const insertBulletIndex = -1 + this.bulletsLength - removeBulletIndex;\n      const realIndex = getRealIndex(insertBulletIndex, this.currentIndex, mappedActiveIndex);\n      const isEdge = isEdgeBullet(insertBulletIndex, realIndex, this.bulletsLength, this.totalSlides);\n\n      const bullet = this.renderBullet(insertBulletIndex, { isEdge });\n\n      this.insertBullet(sign, bullet);\n    }\n  }\n\n  private handleBulletMovement({\n    bullet,\n    index,\n    activeIndex,\n    sign,\n    removeBullet,\n    removeBulletIndex,\n  }: {\n    bullet: HTMLElement;\n    index: number;\n    activeIndex: number;\n    sign: Sign;\n    removeBullet: boolean;\n    removeBulletIndex: number;\n  }) {\n    if (removeBulletIndex === index) {\n      return remove(bullet);\n    }\n\n    // shift index due to remove bullet\n    index = index - (removeBullet ? sign : 0);\n\n    const realIndex = getRealIndex(index, this.currentIndex, activeIndex);\n    const isEdge = isEdgeBullet(index, realIndex, this.bulletsLength, this.totalSlides);\n\n    this.setAttributes(bullet, {\n      isEdge,\n      isActive: index === activeIndex,\n      position: removeBullet ? index * this.diameter : undefined,\n    });\n  }\n\n  private renderBullet(index: number, { isActive, isEdge }: { isActive?: boolean; isEdge?: boolean } = {}) {\n    const element = createElement('span', { classNames: 'virchual__pagination-bullet' });\n\n    this.setAttributes(element, { isActive, isEdge, position: index * this.diameter });\n\n    return element;\n  }\n\n  private setAttributes(bullet: HTMLElement, { isActive, isEdge, position }: { isActive: boolean; isEdge: boolean; position?: number }) {\n    addOrRemoveClass(bullet, 'virchual__pagination-bullet--active', !isActive);\n    addOrRemoveClass(bullet, 'virchual__pagination-bullet--edge', !isEdge);\n\n    if (position != null) {\n      bullet.style.transform = `translateX(${position}px)`;\n    }\n  }\n\n  private insertBullet(sign: Sign, bullet: HTMLElement) {\n    const insert = sign === 1 ? append : prepend;\n\n    insert(this.ref, bullet);\n  }\n}\n","import { identity } from './types';\nimport { addOrRemoveClass, append, prepend as prependFn, remove, createElement } from './utils/dom';\nimport { noop } from './utils/utils';\nimport { VirchualSettings } from './virchual';\n\n/**\n * Virtual slide component.\n */\nexport class Slide {\n  ref: HTMLElement;\n  isMounted = false;\n  isActive = false;\n  position: number;\n\n  private hasChanged = false;\n  private html: string;\n  private transitionEndCallback: identity;\n\n  constructor(html: string | HTMLElement, private frame: HTMLElement, private settings: VirchualSettings) {\n    if (typeof html === 'string') {\n      this.html = html;\n\n      return;\n    }\n\n    this.ref = html;\n    this.html = this.ref.innerHTML;\n    this.isMounted = true;\n  }\n\n  set<T extends Extract<keyof this, 'isActive' | 'position'>>(property: T, value: this[T]) {\n    this[property] = value;\n\n    this.hasChanged = true;\n  }\n\n  render(): HTMLElement {\n    this.ref = createElement('div', { classNames: 'virchual__slide', html: this.html });\n\n    this.setAttributes();\n\n    return this.ref;\n  }\n\n  mount(prepend = false) {\n    if (this.isMounted) {\n      // slide has changed -> update in DOM\n      if (this.hasChanged) {\n        this.update();\n      }\n\n      return;\n    }\n\n    console.debug('[Mount] Slide', { ref: this.ref, prepend });\n\n    this.render();\n\n    this.isMounted = true;\n\n    this.ref.addEventListener('transitionend', () => {\n      this.ref.style.transition = '';\n\n      this.transitionEndCallback();\n    });\n\n    const insert = prepend ? prependFn : append;\n\n    insert(this.frame, this.ref);\n  }\n\n  unmount() {\n    console.debug('[Unmount] Slide', { ref: this.ref });\n\n    this.isMounted = false;\n\n    remove(this.ref);\n  }\n\n  /**\n   * Start transition.\n   *\n   * @param value Position to translate to.\n   * @param easing Enable or disable transition easing.\n   * @param done Callback function after transition has ended.\n   */\n  translate(value: number, { easing, done }: { easing?: boolean; done?: identity } = {}) {\n    this.transitionEndCallback = done || noop;\n\n    if (easing) {\n      this.ref.style.transition = `transform ${this.settings['speed']}ms ${this.settings['easing']}`;\n    } else {\n      this.ref.style.transition = '';\n    }\n\n    this.ref.style.transform = `translate3d(calc(${this.position}% + ${Math.round(value)}px), 0, 0)`;\n  }\n\n  private update() {\n    this.hasChanged = false;\n\n    this.setAttributes();\n  }\n\n  private setAttributes() {\n    addOrRemoveClass(this.ref, 'virchual__slide--active', !this.isActive);\n\n    this.translate(0, { easing: true });\n  }\n}\n","import { ComponentConstructor } from './components/component';\nimport { Drag } from './drag';\nimport { Pagination } from './pagination';\nimport { Slide } from './slide';\nimport { identity, Sign } from './types';\nimport { assert } from './utils/error';\nimport { Event, stop } from './utils/event';\nimport { slidingWindow } from './utils/sliding-window';\nimport { range, rewind } from './utils/utils';\n\nexport type VirchualSettings = {\n  slides?: string[] | (() => string[]);\n  speed?: number;\n  easing?: string;\n  swipeDistanceThreshold?: number;\n  flickVelocityThreshold?: number;\n  flickPower?: number;\n  pagination?: boolean;\n  window?: number;\n};\n\nexport class Virchual {\n  frame: HTMLElement;\n  currentIndex = 0;\n  slides: Slide[] = [];\n\n  private eventBus: Event;\n  private isBusy = false;\n  private pagination: Pagination;\n\n  private eventBindings: {\n    onClick: () => identity;\n    onDrag: () => identity;\n    onDragEnd: () => identity;\n  };\n\n  constructor(public container: HTMLElement, public settings: VirchualSettings = {}) {\n    this.frame = this.container.querySelector('.virchual__frame');\n\n    assert(this.frame, 'Invalid element');\n\n    this.currentIndex = 0;\n    this.settings = {\n      slides: [],\n      speed: 200,\n      swipeDistanceThreshold: 150,\n      flickVelocityThreshold: 0.6,\n      flickPower: 600,\n      easing: 'ease-out',\n      pagination: true,\n      window: 1,\n      ...settings,\n    };\n\n    this.eventBus = new Event();\n\n    this.eventBindings = {\n      onClick: this.onClick.bind(this),\n      onDrag: this.onDrag.bind(this),\n      onDragEnd: this.onDragEnd.bind(this),\n    };\n\n    let rawSlides;\n\n    const slides = this.settings['slides'];\n\n    if (typeof slides === 'function') {\n      rawSlides = slides();\n    } else {\n      rawSlides = slides;\n    }\n\n    this.slides = this.hydrate();\n\n    this.slides = this.slides.concat((rawSlides || []).map(slide => new Slide(slide, this.frame, this.settings)));\n\n    this.pagination = new Pagination(this.container, this.slides.length);\n\n    this.pagination.render();\n  }\n\n  /**\n   * Register component class.\n   *\n   * @param cls Component class.\n   * @param settings Optional settings.\n   */\n  register<T, U>(cls: ComponentConstructor<T, U>, settings?: U) {\n    new cls({ virchual: this, eventBus: this.eventBus }, settings);\n  }\n\n  /**\n   * Mount components.\n   */\n  mount() {\n    console.debug('[Mount] Virchual');\n\n    this.mountAndUnmountSlides();\n\n    this.bindEvents();\n\n    new Drag(this.frame, { event: this.eventBus }).mount();\n\n    this.eventBus.emit('mounted');\n  }\n\n  /**\n   * Disable Virchual instance and all user interactions (changing slides)\n   *\n   * @TODO\n   */\n  disable() {\n    return;\n  }\n\n  /**\n   * Enable previously disabled Virchual instance. Enable user interaction.\n   *\n   * @TODO\n   */\n  enable() {\n    return;\n  }\n\n  /**\n   * Register callback fired on the given event(s).\n   *\n   * @param events An event name. Use space to separate multiple events.\n   *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n   * @param handler A callback function.\n   * @param elm  Optional. Native event will be listened to when this arg is provided.\n   * @param opts Optional. Options for addEventListener.\n   */\n  on(events: string, handler: identity) {\n    this.eventBus.on(events, handler);\n  }\n\n  /**\n   * Unsubscribe the given event.\n   *\n   * @param events - A event name.\n   * @param elm    - Optional. removeEventListener() will be called when this arg is provided.\n   */\n  off(events: string) {\n    this.eventBus.off(events);\n  }\n\n  /**\n   * Go to previous slide.\n   */\n  prev() {\n    console.debug('[Controls] Previous');\n\n    this.goTo('prev');\n  }\n\n  /**\n   * Go to next slide.\n   */\n  next() {\n    console.debug('[Controls] Next');\n\n    this.goTo('next');\n  }\n\n  /**\n   * Destroy instance, remove DOM events.\n   */\n  destroy() {\n    this.eventBus.destroy();\n\n    this.eventBus.emit('destroy');\n  }\n\n  private goTo(control: 'prev' | 'next') {\n    const slide = this.slides[this.currentIndex];\n\n    slide.translate(-100, {\n      easing: true,\n      done: () => {\n        this.isBusy = false;\n      },\n    });\n\n    const sign: Sign = control === 'prev' ? -1 : +1;\n\n    this.currentIndex = rewind(this.currentIndex + sign * 1, this.slides.length - 1);\n\n    this.mountAndUnmountSlides({ control: control });\n\n    const move = control === 'prev' ? this.pagination.prev.bind(this.pagination) : this.pagination.next.bind(this.pagination);\n\n    move();\n\n    this.eventBus.emit('move', { index: this.currentIndex, control });\n  }\n\n  private hydrate(): Slide[] {\n    const slideElements = [].slice.call(this.frame.querySelectorAll('div')) as HTMLDivElement[];\n\n    return slideElements.map(element => new Slide(element, this.frame, this.settings));\n  }\n\n  /**\n   * Mount and unmount slides.\n   */\n  private mountAndUnmountSlides({ control }: { control?: 'prev' | 'next' } = {}) {\n    const currentSlide = this.slides[this.currentIndex];\n    const indices = range(0, this.slides.length - 1);\n    const window = this.settings['window'];\n\n    const mountableSlideIndices = slidingWindow(indices, this.currentIndex, window);\n    const mountableSlideIndicesWithOffset = slidingWindow(indices, this.currentIndex, window + 1);\n\n    mountableSlideIndicesWithOffset.forEach(index => {\n      const slide = this.slides[index];\n\n      if (index === this.currentIndex) {\n        currentSlide.set('isActive', true);\n      } else {\n        currentSlide.set('isActive', false);\n      }\n\n      const realIndex = mountableSlideIndices.indexOf(index);\n\n      // unmount\n      if (realIndex < 0) {\n        return slide.unmount();\n      }\n\n      slide.set('position', (window - realIndex) * -100);\n\n      const prepend = control === 'prev' || (control == null && this.slides[0].isMounted && realIndex - window < 0);\n\n      slide.mount(prepend);\n    });\n  }\n\n  private bindEvents() {\n    this.eventBus.on('drag', this.eventBindings.onDrag);\n    this.eventBus.on('dragend', this.eventBindings.onDragEnd);\n    this.eventBus.on('click', this.eventBindings.onClick, this.frame, { capture: true });\n  }\n\n  /**\n   * Called when frame is clicked.\n   *\n   * @param event A click event.\n   */\n  private onClick(event: MouseEvent) {\n    this.isBusy && stop(event);\n  }\n\n  /**\n   * Handle drag event.\n   *\n   * @param event\n   */\n  private onDrag(event: { offset: { x: number; y: number }; control: 'prev' | 'next' }) {\n    this.isBusy = true;\n\n    const mountableSlideIndices = slidingWindow(range(0, this.slides.length - 1), this.currentIndex, this.settings['window']);\n\n    const sign = event.control === 'prev' ? +1 : -1;\n\n    mountableSlideIndices.forEach(index => {\n      const slide = this.slides[index];\n\n      const x = sign * Math.abs(event.offset.x);\n\n      slide.translate(x);\n    });\n  }\n\n  /**\n   * Handle dragged event.\n   *\n   * @param event\n   */\n  private onDragEnd(event: { control: 'prev' | 'next' }) {\n    console.debug('[Drag] Drag end', event);\n\n    this.goTo(event.control);\n  }\n}\n","/**\n * Check existence of the given object and throw an error if it doesn't.\n *\n * @throws {Error}\n *\n * @param subject - A subject to be confirmed.\n * @param message - An error message.\n */\nexport function assert<T extends unknown>(subject: T, message: string) {\n  if (!subject) {\n    throw new Error(message);\n  }\n}\n","import { Controls, ControlsSettings } from './../src/components/controls/controls';\nimport { Lazy } from './../src/components/lazy/lazy';\nimport { LazyLoadImage } from './../src/components/lazyload-image/lazyload-image';\nimport { Virchual as VirchualCore, VirchualSettings as VirchualCoreSettings } from './../src/virchual';\n\n// @TODO settings with combined settings from components\nexport type VirchualSettings = VirchualCoreSettings & ControlsSettings;\n\nexport default class Virchual extends VirchualCore {\n  constructor(container: HTMLElement, settings: VirchualSettings = {}) {\n    super(container, settings);\n\n    this.register(Controls, { isEnabled: true });\n    // this.register(Lazy, { threshold: 300 }); @TODO\n    this.register(LazyLoadImage, { lazyload: true });\n  }\n}\n"],"names":["stop","event","stopImmediatePropagation","stopPropagation","preventDefault","Event","[object Object]","this","events","handler","element","opts","split","forEach","addEvent","removeEvent","args","handlers","item","elm","unroll","removeEventListener","addEventListener","push","v","u","g","filter","Controls","imports","settings","controls","slice","call","virchual","container","querySelectorAll","eventBus","on","console","log","onClickBound","onClick","bind","mount","button","target","closest","dataset","next","prev","createElement","tagName","S","classNames","k","html","document","className","innerHTML","remove","parentElement","removeChild","append","parent","child","appendChild","prepend","firstChild","insertBefore","addOrRemoveClass","klass","classList","add","debounce","callback","delay","timeoutId","clearTimeout","setTimeout","requestAnimationFrame","range","start","end","Array","fill","map","_","idx","rewind","index","edge","noop","slidingWindow","source","len","get","length","isOutOfLowerBounds","isOutOfUpperBounds","isOutOfBounds","sign","multiple","Math","max","floor","abs","isPictureTag","nodeName","toLowerCase","getImage","image","picture","parentNode","LazyLoadImage","D","lazyload","I","lazyloadSelector","load","onLoad","error","onError","mounted","doLazyLoad","move","getImages","loadImage","slidesWindowIndices","slides","currentIndex","images","slide","isMounted","ref","img","hasLazyImages","srcSetData","srcset","srcData","src","setAttribute","removeAttribute","completeLoading","off","Drag","frame","eventBindings","Y","onStart","G","onMove","H","onEnd","passive","isDragging","startInfo","analyze","currentInfo","emit","shouldMove","offset","atan","y","x","PI","goTo","info","velocity","timeStamp","touches","clientX","clientY","fromX","fromY","to","duration","time","tt","st","control","isEdgeBullet","realIndex","bullets","total","getRealIndex","activeBulletIndex","Pagination","totalSlides","it","diameter","ht","querySelector","bulletsLength","min","centerIndex","style","width","height","isEdge","bullet","renderBullet","lt","at","mappedActiveIndex","center","removeBullet","removeBulletIndex","handleBulletMovement","dt","vt","ft","gt","insertBulletIndex","insertBullet","activeIndex","setAttributes","position","undefined","isActive","transform","Slide","property","value","hasChanged","update","debug","V","render","transition","transitionEndCallback","prependFn","easing","done","round","translate","rawSlides","subject","Error","assert","speed","bt","Et","wt","zt","window","B","At","onDrag","Tt","onDragEnd","hydrate","concat","pagination","cls","M","A","mountAndUnmountSlides","bindEvents","destroy","isBusy","currentSlide","indices","mountableSlideIndices","set","indexOf","unmount","capture","super","register","isEnabled"],"mappings":"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"}
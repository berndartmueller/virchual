{"version":3,"file":"virchual.bundle.min.js","sources":["../src/utils/event.ts","../src/components/controls/controls.ts","../src/components/lazy/lazy.ts","../src/utils/debouncer.ts","../src/drag.ts","../src/utils/dom.ts","../src/utils/utils.ts","../src/pagination.ts","../src/slide.ts","../src/utils/sliding-window.ts","../src/virchual.ts","../src/utils/error.ts","../entry/entry-complete.ts"],"sourcesContent":["export function stop(event: MouseEvent | TouchEvent) {\n  if (!event) return;\n\n  event.stopImmediatePropagation();\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nexport class Event {\n  /**\n   * Store all event this.data.\n   */\n  private handlers: Array<{\n    event: string;\n    handler: (...args: unknown[]) => void;\n    elm: (Window & typeof globalThis) | Element;\n    opts: boolean | AddEventListenerOptions;\n  }> = [];\n\n  /**\n   * Subscribe the given event(s).\n   *\n   * @param events  - An event name. Use space to separate multiple events.\n   *                  Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n   * @param handler - A callback function.\n   * @param element - Optional. Native event will be listened to when this arg is provided.\n   * @param opts - Optional. Options for addEventListener.\n   */\n  on(\n    events: string,\n    handler: (...args: unknown[]) => void,\n    element?: (Window & typeof globalThis) | Element,\n    opts: boolean | AddEventListenerOptions = {},\n  ) {\n    events.split(' ').forEach(event => {\n      element && element.addEventListener(event, handler, opts);\n\n      this.handlers.push({ event, handler, elm: element, opts: opts });\n    });\n  }\n\n  /**\n   * Unsubscribe the given event(s).\n   *\n   * @param events - A event name or names split by space.\n   * @param element - Optional. removeEventListener() will be called when this arg is provided.\n   */\n  off(events: string, element?: (Window & typeof globalThis) | Element) {\n    events.split(' ').forEach(event => {\n      this.handlers = this.handlers.filter(item => {\n        if (item && item.event === event && item.elm === element) {\n          this.unroll(item);\n        }\n      });\n    });\n  }\n\n  /**\n   * Emit an event.\n   * This method is only for custom events.\n   *\n   * @param event - An event name.\n   * @param args  - Any number of arguments passed to handlers.\n   */\n  emit(event: string, ...args: unknown[]) {\n    this.handlers.forEach(item => {\n      if (!item.elm && item.event.split('.')[0] === event) {\n        item.handler(...args);\n      }\n    });\n  }\n\n  /**\n   * Clear event this.data.\n   */\n  destroy() {\n    this.handlers.forEach(this.unroll);\n    this.handlers = [];\n  }\n\n  /**\n   * Remove the registered event listener.\n   *\n   * @param item - An object containing event this.data.\n   */\n  private unroll(item) {\n    item.elm && item.elm.removeEventListener(item.event, item.handler, item.opts);\n  }\n}\n","import { identity } from '../../types';\nimport { stop } from '../../utils/event';\nimport { ComponentDependencies } from './../component';\n\nexport class Controls {\n  private controls: HTMLButtonElement[];\n  private onClickBound: () => identity;\n\n  constructor(private imports: ComponentDependencies, private settings?: { isEnabled?: boolean }) {\n    this.controls = [].slice.call(imports.virchual.container.querySelectorAll('.virchual__control'));\n\n    imports.eventBus.on('destroy', () => {\n      console.log('controls component destroy');\n    });\n\n    this.onClickBound = this.onClick.bind(this);\n\n    this.mount();\n  }\n\n  mount(): void {\n    this.controls.forEach(button => this.imports.eventBus.on('click', this.onClickBound, button));\n  }\n\n  private onClick(event: MouseEvent) {\n    stop(event);\n\n    const button: HTMLButtonElement = (event.target as Element).closest('button') as HTMLButtonElement;\n    const control = button.dataset.controls as 'prev' | 'next';\n\n    if (control === 'prev') {\n      this.imports.virchual.prev();\n\n      return;\n    }\n\n    this.imports.virchual.next();\n  }\n}\n","import { ComponentDependencies } from './../component';\n\nexport type LazySettings = {\n  threshold?: number;\n};\n\nexport class Lazy {\n  constructor(private imports: ComponentDependencies, private settings?: { threshold?: number }) {\n    this.settings = {\n      threshold: 300,\n      ...settings,\n    };\n\n    this.imports.virchual.mount.apply(this.imports.virchual);\n  }\n}\n","/**\n * Handles debouncing of events via requestAnimationFrame\n *\n * @param callback The callback to handle whichever event\n */\nexport function debounce(callback: (...args: unknown[]) => unknown, delay = 100) {\n  let timeoutId: NodeJS.Timeout;\n\n  return (...args: unknown[]) => {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(\n      () =>\n        requestAnimationFrame(() => {\n          timeoutId = null;\n\n          callback(...args);\n        }),\n      delay,\n    );\n  };\n}\n","import { identity } from './types';\nimport { debounce } from './utils/debouncer';\nimport { Event, stop } from './utils/event';\n\nexport class Drag {\n  // Analyzed info on starting drag.\n  private startInfo;\n\n  // Analyzed info being updated while dragging/swiping.\n  private currentInfo;\n\n  // Determine whether slides are being dragged or not.\n  private isDragging = false;\n\n  private eventBus: Event;\n\n  // bound event handlers (to keep `this` context)\n  private eventBindings: {\n    onStart: identity;\n    onMove: identity;\n    onEnd: identity;\n  };\n\n  constructor(private frame: HTMLElement, { event }: { event: Event }) {\n    this.eventBus = event;\n\n    this.eventBindings = {\n      onStart: this.onStart.bind(this),\n      onMove: debounce(this.onMove.bind(this), 1),\n      onEnd: this.onEnd.bind(this),\n    };\n  }\n\n  mount() {\n    this.eventBus.on('touchstart mousedown', this.eventBindings.onStart, this.frame);\n    this.eventBus.on('touchmove mousemove', this.eventBindings.onMove, this.frame, { passive: false });\n    this.eventBus.on('touchend touchcancel mouseleave mouseup dragend', this.eventBindings.onEnd, this.frame);\n  }\n\n  /**\n   * Called when the track starts to be dragged.\n   */\n  private onStart(event: MouseEvent & TouchEvent) {\n    stop(event);\n\n    if (!this.isDragging) {\n      this.startInfo = this.analyze(event, {});\n\n      this.currentInfo = this.startInfo;\n\n      this.eventBus.emit('dragstart', this.currentInfo);\n    }\n  }\n\n  private onMove(event: MouseEvent & TouchEvent) {\n    stop(event);\n\n    if (!this.startInfo) {\n      return;\n    }\n\n    this.currentInfo = this.analyze(event, this.startInfo);\n\n    if (this.isDragging) {\n      stop(event);\n\n      this.eventBus.emit('drag', this.currentInfo);\n    } else {\n      if (this.shouldMove(this.currentInfo)) {\n        this.eventBus.emit('drag', this.currentInfo);\n\n        this.isDragging = true;\n      }\n    }\n  }\n\n  /**\n   * Determine whether to start moving the track or not by drag angle.\n   *\n   * @param info - An information object.\n   *\n   * @return True if the track should be moved or false if not.\n   */\n  private shouldMove({ offset }) {\n    const angle = (Math.atan(Math.abs(offset.y) / Math.abs(offset.x)) * 180) / Math.PI;\n\n    const dragAngleThreshold = 45;\n\n    return angle < dragAngleThreshold;\n  }\n\n  /**\n   * Called when dragging ends.\n   */\n  private onEnd() {\n    this.startInfo = null;\n\n    if (this.isDragging) {\n      this.goTo(this.currentInfo);\n\n      this.isDragging = false;\n    }\n  }\n\n  /**\n   * Go to the slide determined by the analyzed data.\n   *\n   * @param info - An info object.\n   */\n  private goTo(info) {\n    const velocity = info.velocity['x'];\n    const absV = Math.abs(velocity);\n\n    if (absV > 0) {\n      this.eventBus.emit('dragend', this.currentInfo);\n    }\n  }\n\n  /**\n   * Analyze the given event object and return important information for handling swipe behavior.\n   *\n   * @param event          - Touch or Mouse event object.\n   * @param startInfo  - Information analyzed on start for calculating difference from the current one.\n   *\n   * @return - An object containing analyzed information, such as offset, velocity, etc.\n   */\n  private analyze(\n    event: MouseEvent & TouchEvent,\n    startInfo,\n  ): {\n    to: { x: number; y: number };\n    offset: { x: number; y: number };\n    velocity: { x: number; y: number };\n    time: number;\n    control: 'prev' | 'next';\n  } {\n    const { timeStamp, touches } = event;\n    const { clientX, clientY } = touches ? touches[0] : event;\n    const { x: fromX = clientX, y: fromY = clientY } = startInfo.to || {};\n\n    const startTime = startInfo.time || 0;\n    const offset = { x: clientX - fromX, y: clientY - fromY };\n    const duration = timeStamp - startTime;\n    const velocity = { x: offset.x / duration, y: offset.y / duration };\n\n    return {\n      offset,\n      velocity,\n      to: { x: clientX, y: clientY },\n      time: timeStamp,\n      control: velocity.x < 0 ? 'next' : 'prev',\n    };\n  }\n}\n","export function createElement(tagName: string, { classNames, html }: { classNames?: string; html?: string }) {\n  const element = document.createElement(tagName);\n\n  element.className = classNames;\n  element.innerHTML = html || '';\n\n  return element;\n}\n\n/**\n * Remove a given element from a DOM tree.\n *\n * @param elms - Element(s) to be removed.\n */\nexport function remove(element: HTMLElement) {\n  if (element && element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Append a child to a given element.\n *\n * @param parent - A parent element.\n * @param child  - An element to be appended.\n */\nexport function append(parent: HTMLElement, child: HTMLElement) {\n  if (parent) {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Prepend an element to parent.\n *\n * @param element- An element to prepend.\n * @param element - A reference element.\n */\nexport function prepend(parent: HTMLElement, element: HTMLElement) {\n  if (parent && parent.firstChild && element) {\n    parent.insertBefore(element, parent.firstChild);\n  }\n}\n\n/**\n * Add or remove css class to given element.\n *\n * @param element Element to add class tp.\n * @param klass CSS classname.\n * @param remove Remove class instead of adding.\n */\nexport function addOrRemoveClass(element: HTMLElement, klass: string, remove = false) {\n  if (!remove) {\n    element.classList.add(klass);\n\n    return;\n  }\n\n  element.classList.remove(klass);\n}\n","export function range(start: number, end: number): number[] {\n  return Array(end - start + 1)\n    .fill(0)\n    .map((_, idx) => start + idx);\n}\n\n/*\n * Rewind the given index if it's out of range.\n *\n * @param index - An index.\n * @param edge - Edge\n *\n * @return A rewound index.\n */\nexport function rewind(index: number, edge: number): number {\n  if (index > edge) {\n    return 0;\n  }\n\n  if (index < 0) {\n    return edge;\n  }\n\n  return index;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n","import { Sign } from './types';\nimport { addOrRemoveClass, append, prepend, remove, createElement } from './utils/dom';\nimport { range, rewind } from './utils/utils';\n\n/**\n * Map current index to bullet elements index.\n *\n * @param index Current index.\n * @param center Center index of bullets (5 bullets -> center: 2).\n * @param total Total bullets. Same as amount of slides.\n */\nexport function mapActiveIndex(index: number, center: number, total: number) {\n  return index - Math.max(index - center, 0) + Math.max(index - (-1 + total - center), 0);\n}\n\n/**\n * Return true if bullet is edge bullet.\n *\n * @param index Index of bullet.\n * @param realIndex Real slide index which bullet represents.\n * @param bullets Amount of shown bullets.\n * @param total Total bullets. Same as amount of slides.\n */\nexport function isEdgeBullet(index: number, realIndex: number, bullets: number, total: number) {\n  const isRightEdge = index === bullets - 1;\n\n  // bullet is either left or right edge\n  if (index === 0) {\n    return index !== realIndex;\n  }\n\n  if (isRightEdge) {\n    return realIndex + 1 < total;\n  }\n\n  return false;\n}\n\n/**\n * Get real index of bullet.\n *\n * @param index Index of bullet.\n * @param currentIndex Current active index.\n * @param activeBulletIndex Index of active bullet element.\n */\nfunction getRealIndex(index: number, currentIndex: number, activeBulletIndex: number) {\n  return currentIndex - activeBulletIndex + index;\n}\n\nexport class Pagination {\n  private ref: HTMLElement;\n  private currentIndex = 0;\n  private centerIndex: number;\n  private bulletsLength: number;\n  private diameter: number;\n\n  constructor(\n    private container: HTMLElement,\n    private totalSlides: number,\n    { diameter, bullets }: { diameter?: number; bullets?: number } = {},\n  ) {\n    this.ref = container.querySelector('.virchual__pagination');\n\n    this.bulletsLength = Math.min(totalSlides, bullets ?? 5);\n    this.diameter = diameter ?? 16;\n\n    this.centerIndex = Math.floor(this.bulletsLength / 2);\n  }\n\n  render() {\n    this.ref = createElement('div', { classNames: 'virchual__pagination' });\n\n    this.ref.style.width = `${this.bulletsLength * this.diameter}px`;\n    this.ref.style.height = `${this.diameter}px`;\n\n    range(0, Math.min(this.bulletsLength, this.totalSlides) - 1).forEach(index => {\n      const isEdge = isEdgeBullet(index, index, this.bulletsLength, this.totalSlides);\n\n      const bullet = this.renderBullet(index, { isEdge, isActive: index === this.currentIndex });\n\n      append(this.ref, bullet);\n    });\n\n    append(this.container, this.ref);\n  }\n\n  next() {\n    this.goTo(+1);\n  }\n\n  prev() {\n    this.goTo(-1);\n  }\n\n  private goTo(sign: Sign) {\n    this.currentIndex = rewind(this.currentIndex + sign, this.totalSlides - 1);\n\n    const mappedActiveIndex = mapActiveIndex(this.currentIndex, this.centerIndex, this.totalSlides);\n    const removeBullet = mappedActiveIndex === this.centerIndex && this.currentIndex > this.centerIndex;\n    const removeBulletIndex = removeBullet ? (sign === 1 ? 0 : this.bulletsLength - 1) : -1;\n\n    const bullets = [].slice.call(this.ref.querySelectorAll('span')) as HTMLElement[];\n\n    bullets.forEach((bullet, index) => {\n      this.handleBulletMovement({ bullet, index, sign, removeBullet, removeBulletIndex, activeIndex: mappedActiveIndex });\n    });\n\n    // append or prepend new bullet\n    if (removeBullet) {\n      const insertBulletIndex = -1 + this.bulletsLength - removeBulletIndex;\n      const realIndex = getRealIndex(insertBulletIndex, this.currentIndex, mappedActiveIndex);\n      const isEdge = isEdgeBullet(insertBulletIndex, realIndex, this.bulletsLength, this.totalSlides);\n\n      const bullet = this.renderBullet(insertBulletIndex, { isEdge });\n\n      this.insertBullet(sign, bullet);\n    }\n  }\n\n  private handleBulletMovement({\n    bullet,\n    index,\n    activeIndex,\n    sign,\n    removeBullet,\n    removeBulletIndex,\n  }: {\n    bullet: HTMLElement;\n    index: number;\n    activeIndex: number;\n    sign: Sign;\n    removeBullet: boolean;\n    removeBulletIndex: number;\n  }) {\n    if (removeBulletIndex === index) {\n      return remove(bullet);\n    }\n\n    // shift index due to remove bullet\n    index = index - (removeBullet ? sign : 0);\n\n    const realIndex = getRealIndex(index, this.currentIndex, activeIndex);\n    const isEdge = isEdgeBullet(index, realIndex, this.bulletsLength, this.totalSlides);\n\n    this.setAttributes(bullet, {\n      isEdge,\n      isActive: index === activeIndex,\n      position: removeBullet ? index * this.diameter : undefined,\n    });\n  }\n\n  private renderBullet(index: number, { isActive, isEdge }: { isActive?: boolean; isEdge?: boolean } = {}) {\n    const element = createElement('span', { classNames: 'virchual__pagination-bullet' });\n\n    this.setAttributes(element, { isActive, isEdge, position: index * this.diameter });\n\n    return element;\n  }\n\n  private setAttributes(bullet: HTMLElement, { isActive, isEdge, position }: { isActive: boolean; isEdge: boolean; position?: number }) {\n    addOrRemoveClass(bullet, 'virchual__pagination-bullet--active', !isActive);\n    addOrRemoveClass(bullet, 'virchual__pagination-bullet--edge', !isEdge);\n\n    if (position != null) {\n      bullet.style.transform = `translateX(${position}px)`;\n    }\n  }\n\n  private insertBullet(sign: Sign, bullet: HTMLElement) {\n    const insert = sign === 1 ? append : prepend;\n\n    insert(this.ref, bullet);\n  }\n}\n","import { identity } from './types';\nimport { addOrRemoveClass, append, prepend as prependFn, remove, createElement } from './utils/dom';\nimport { noop } from './utils/utils';\nimport { VirchualSettings } from './virchual';\n\n/**\n * Virtual slide component.\n */\nexport class Slide {\n  isMounted = false;\n  isActive = false;\n  position: number;\n\n  private hasChanged = false;\n  private html: string;\n  private ref: HTMLElement;\n  private transitionEndCallback: identity;\n\n  constructor(html: string | HTMLElement, private frame: HTMLElement, private settings: VirchualSettings) {\n    if (typeof html === 'string') {\n      this.html = html;\n\n      return;\n    }\n\n    this.ref = html;\n    this.html = this.ref.innerHTML;\n    this.isMounted = true;\n  }\n\n  set<T extends Extract<keyof this, 'isActive' | 'position'>>(property: T, value: this[T]) {\n    this[property] = value;\n\n    this.hasChanged = true;\n  }\n\n  render(): HTMLElement {\n    const element = createElement('div', { classNames: 'virchual__slide', html: this.html });\n\n    this.setAttributes(element);\n\n    return element;\n  }\n\n  mount(prepend = false) {\n    if (this.isMounted) {\n      // slide has changed -> update in DOM\n      if (this.hasChanged) {\n        this.update();\n      }\n\n      return;\n    }\n\n    console.debug('[Mount] Slide', { ref: this.ref, prepend });\n\n    this.ref = this.render();\n\n    this.isMounted = true;\n\n    this.ref.addEventListener('transitionend', this.transitionEndCallback);\n\n    const insert = prepend ? prependFn : append;\n\n    insert(this.frame, this.ref);\n  }\n\n  unmount() {\n    console.debug('[Unmount] Slide', { ref: this.ref });\n\n    this.isMounted = false;\n\n    remove(this.ref);\n  }\n\n  /**\n   * Start transition.\n   *\n   * @param value Position to translate to.\n   * @param easing Enable or disable transition easing.\n   * @param done Callback function after transition has ended.\n   */\n  translate(value: number, { easing, done }: { easing?: boolean; done?: identity } = {}) {\n    this.transitionEndCallback = done || noop;\n\n    this.ref.style.transition = `transform ${this.settings['speed']}ms ${easing ? this.settings['easing'] : 'ease'}`;\n    this.ref.style.transform = `translate3d(calc(${this.position}% + ${Math.round(value)}px), 0, 0)`;\n  }\n\n  private update() {\n    this.hasChanged = false;\n\n    this.setAttributes(this.ref);\n  }\n\n  private setAttributes(element: HTMLElement) {\n    addOrRemoveClass(element, 'virchual__slide--active', !this.isActive);\n\n    element.style.transform = `translate3d(${this.position}%, 0, 0)`;\n  }\n}\n","import { range } from './utils';\n\n/**\n * Returns a sliding window section of an array.\n *\n * @param source Source array.\n * @param start The start of the specified portion of the array. Acts as the center of the sliding window.\n * @param len The window size/length. Specifies how many items the window has on each sides.\n */\nexport function slidingWindow(source: number[], start: number, len: number): number[] {\n  const left = range(start - len, start - 1).map(index => get(source, index));\n  const center = [source[start]];\n  const right = range(start + 1, start + len).map(index => get(source, index));\n\n  const window = [...left, ...center, ...right];\n\n  return window;\n}\n\n/**\n * Get array item by index.\n *\n * Returning items from the end of the source array when accessing negative indexes or\n * from the start of source array when accessing out of range indexes.\n *\n * @param source Source array.\n * @param index Index of array item to access.\n */\nexport function get<T>(source: T[], index: number): T {\n  if (source.length === 0) {\n    return;\n  }\n\n  const isOutOfLowerBounds = index < 0;\n  const isOutOfUpperBounds = index > source.length - 1;\n  const isOutOfBounds = isOutOfLowerBounds || isOutOfUpperBounds;\n\n  const sign = isOutOfUpperBounds ? -1 : +1;\n  const multiple = Math.max(Math.floor(Math.abs(index) / source.length), 1);\n\n  if (isOutOfBounds) {\n    index += sign * multiple * source.length;\n  }\n\n  return source[index];\n}\n","import { ComponentConstructor } from './components/component';\nimport { Drag } from './drag';\nimport { Pagination } from './pagination';\nimport { Slide } from './slide';\nimport { identity, Sign } from './types';\nimport { assert } from './utils/error';\nimport { Event, stop } from './utils/event';\nimport { slidingWindow } from './utils/sliding-window';\nimport { range, rewind } from './utils/utils';\n\nexport type VirchualSettings = {\n  slides?: string[] | (() => string[]);\n  speed?: number;\n  easing?: string;\n  swipeDistanceThreshold?: number;\n  flickVelocityThreshold?: number;\n  flickPower?: number;\n  pagination?: boolean;\n  window?: number;\n};\n\nexport class Virchual {\n  frame: HTMLElement;\n  currentIndex = 0;\n\n  private slides: Slide[] = [];\n  private eventBus: Event;\n  private isBusy = false;\n  private pagination: Pagination;\n\n  private eventBindings: {\n    onClick: () => identity;\n    onDrag: () => identity;\n    onDragEnd: () => identity;\n  };\n\n  constructor(public container: HTMLElement, public settings: VirchualSettings = {}) {\n    this.frame = this.container.querySelector('.virchual__frame');\n\n    assert(this.frame, 'Invalid element');\n\n    this.currentIndex = 0;\n    this.settings = {\n      slides: [],\n      speed: 200,\n      swipeDistanceThreshold: 150,\n      flickVelocityThreshold: 0.6,\n      flickPower: 600,\n      easing: 'ease-out',\n      pagination: true,\n      window: 1,\n      ...settings,\n    };\n\n    this.eventBus = new Event();\n\n    this.eventBindings = {\n      onClick: this.onClick.bind(this),\n      onDrag: this.onDrag.bind(this),\n      onDragEnd: this.onDragEnd.bind(this),\n    };\n\n    let rawSlides;\n\n    const slides = this.settings['slides'];\n\n    if (typeof slides === 'function') {\n      rawSlides = slides();\n    } else {\n      rawSlides = slides;\n    }\n\n    this.slides = this.hydrate();\n\n    this.slides = this.slides.concat((rawSlides || []).map(slide => new Slide(slide, this.frame, this.settings)));\n\n    this.pagination = new Pagination(this.container, this.slides.length);\n\n    this.pagination.render();\n  }\n\n  /**\n   * Register component class.\n   *\n   * @param cls Component class.\n   * @param settings Optional settings.\n   */\n  register<T, U>(cls: ComponentConstructor<T, U>, settings?: U) {\n    new cls({ virchual: this, eventBus: this.eventBus }, settings);\n  }\n\n  /**\n   * Mount components.\n   */\n  mount() {\n    console.debug('[Mount] Virchual');\n\n    this.eventBus.emit('mounted');\n\n    this.mountAndUnmountSlides();\n\n    this.bindEvents();\n\n    new Drag(this.frame, { event: this.eventBus }).mount();\n  }\n\n  /**\n   * Disable Virchual instance and all user interactions (changing slides)\n   *\n   * @TODO\n   */\n  disable() {\n    return;\n  }\n\n  /**\n   * Enable previously disabled Virchual instance. Enable user interaction.\n   *\n   * @TODO\n   */\n  enable() {\n    return;\n  }\n\n  /**\n   * Register callback fired on the given event(s).\n   *\n   * @param events An event name. Use space to separate multiple events.\n   *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n   * @param handler A callback function.\n   * @param elm  Optional. Native event will be listened to when this arg is provided.\n   * @param opts Optional. Options for addEventListener.\n   */\n  on(events: string, handler: identity) {\n    this.eventBus.on(events, handler);\n  }\n\n  /**\n   * Unsubscribe the given event.\n   *\n   * @param events - A event name.\n   * @param elm    - Optional. removeEventListener() will be called when this arg is provided.\n   */\n  off(events: string) {\n    this.eventBus.off(events);\n  }\n\n  /**\n   * Go to previous slide.\n   */\n  prev() {\n    console.debug('[Controls] Previous');\n\n    this.goTo('prev');\n  }\n\n  /**\n   * Go to next slide.\n   */\n  next() {\n    console.debug('[Controls] Next');\n\n    this.goTo('next');\n  }\n\n  /**\n   * Destroy instance, remove DOM events.\n   */\n  destroy() {\n    this.eventBus.destroy();\n\n    this.eventBus.emit('destroy');\n  }\n\n  private goTo(control: 'prev' | 'next') {\n    const slide = this.slides[this.currentIndex];\n\n    slide.translate(-100, {\n      easing: true,\n      done: () => {\n        this.isBusy = false;\n      },\n    });\n\n    const sign: Sign = control === 'prev' ? -1 : +1;\n\n    this.currentIndex = rewind(this.currentIndex + sign * 1, this.slides.length - 1);\n\n    this.mountAndUnmountSlides({ control: control });\n\n    const move = control === 'prev' ? this.pagination.prev.bind(this.pagination) : this.pagination.next.bind(this.pagination);\n\n    move();\n  }\n\n  private hydrate(): Slide[] {\n    const slideElements = [].slice.call(this.frame.querySelectorAll('div')) as HTMLDivElement[];\n\n    return slideElements.map(element => new Slide(element, this.frame, this.settings));\n  }\n\n  /**\n   * Mount and unmount slides.\n   */\n  private mountAndUnmountSlides({ control }: { control?: 'prev' | 'next' } = {}) {\n    const currentSlide = this.slides[this.currentIndex];\n    const indices = range(0, this.slides.length - 1);\n    const window = this.settings['window'];\n\n    const mountableSlideIndices = slidingWindow(indices, this.currentIndex, window);\n    const mountableSlideIndicesWithOffset = slidingWindow(indices, this.currentIndex, window + 1);\n\n    mountableSlideIndicesWithOffset.forEach(index => {\n      const slide = this.slides[index];\n\n      if (index === this.currentIndex) {\n        currentSlide.set('isActive', true);\n      } else {\n        currentSlide.set('isActive', false);\n      }\n\n      const realIndex = mountableSlideIndices.indexOf(index);\n\n      // unmount\n      if (realIndex < 0) {\n        return slide.unmount();\n      }\n\n      slide.set('position', (window - realIndex) * -100);\n\n      const prepend = control === 'prev' || (control == null && this.slides[0].isMounted && realIndex - window < 0);\n\n      slide.mount(prepend);\n    });\n  }\n\n  private bindEvents() {\n    this.eventBus.on('drag', this.eventBindings.onDrag);\n    this.eventBus.on('dragend', this.eventBindings.onDragEnd);\n    this.eventBus.on('click', this.eventBindings.onClick, this.frame, { capture: true });\n  }\n\n  /**\n   * Called when frame is clicked.\n   *\n   * @param event A click event.\n   */\n  private onClick(event: MouseEvent) {\n    this.isBusy && stop(event);\n  }\n\n  /**\n   * Handle drag event.\n   *\n   * @param event\n   */\n  private onDrag(event: { offset: { x: number; y: number }; control: 'prev' | 'next' }) {\n    this.isBusy = true;\n\n    const mountableSlideIndices = slidingWindow(range(0, this.slides.length - 1), this.currentIndex, this.settings['window']);\n\n    const sign = event.control === 'prev' ? +1 : -1;\n\n    mountableSlideIndices.forEach(index => {\n      const slide = this.slides[index];\n\n      const x = sign * Math.abs(event.offset.x);\n\n      slide.translate(x);\n    });\n  }\n\n  /**\n   * Handle dragged event.\n   *\n   * @param event\n   */\n  private onDragEnd(event: { control: 'prev' | 'next' }) {\n    console.debug('[Drag] Drag end', event);\n\n    this.goTo(event.control);\n  }\n}\n","/**\n * Check existence of the given object and throw an error if it doesn't.\n *\n * @throws {Error}\n *\n * @param subject - A subject to be confirmed.\n * @param message - An error message.\n */\nexport function assert<T extends unknown>(subject: T, message: string) {\n  if (!subject) {\n    throw new Error(message);\n  }\n}\n","import { Controls } from './../src/components/controls';\nimport { Lazy } from './../src/components/lazy';\nimport { Virchual as VirchualCore, VirchualSettings } from './../src/virchual';\n\nexport default class Virchual extends VirchualCore {\n  constructor(container: HTMLElement, settings: VirchualSettings = {}) {\n    super(container, settings);\n\n    this.register(Controls, { isEnabled: true });\n    this.register(Lazy, { threshold: 300 });\n  }\n}\n"],"names":["stop","event","stopImmediatePropagation","stopPropagation","preventDefault","Event","[object Object]","this","events","handler","element","opts","split","forEach","addEventListener","handlers","push","i","h","o","filter","item","elm","unroll","args","removeEventListener","Controls","imports","settings","controls","slice","call","virchual","container","querySelectorAll","eventBus","on","onClickBound","onClick","bind","mount","button","target","closest","dataset","next","prev","Lazy","threshold","apply","debounce","callback","delay","timeoutId","clearTimeout","setTimeout","requestAnimationFrame","Drag","frame","eventBindings","$","onStart","D","onMove","I","onEnd","passive","isDragging","startInfo","analyze","currentInfo","emit","shouldMove","offset","Math","atan","abs","y","x","PI","goTo","info","velocity","timeStamp","touches","clientX","clientY","fromX","fromY","to","duration","time","X","q","control","createElement","tagName","F","classNames","P","html","document","className","innerHTML","remove","parentElement","removeChild","append","parent","child","appendChild","prepend","firstChild","insertBefore","addOrRemoveClass","klass","classList","add","range","start","end","Array","fill","map","_","idx","rewind","index","edge","noop","isEdgeBullet","realIndex","bullets","total","getRealIndex","currentIndex","activeBulletIndex","Pagination","totalSlides","U","diameter","V","ref","querySelector","bulletsLength","min","centerIndex","floor","style","width","height","isEdge","bullet","renderBullet","W","Z","sign","mappedActiveIndex","center","max","removeBullet","removeBulletIndex","handleBulletMovement","st","it","ht","et","insertBulletIndex","insertBullet","activeIndex","setAttributes","position","undefined","isActive","transform","Slide","isMounted","property","value","hasChanged","update","render","transitionEndCallback","prependFn","easing","done","transition","round","slidingWindow","source","len","get","length","isOutOfLowerBounds","isOutOfUpperBounds","isOutOfBounds","multiple","rawSlides","subject","Error","assert","slides","speed","ut","dt","vt","ft","window","T","pt","onDrag","gt","onDragEnd","hydrate","concat","slide","pagination","cls","M","mountAndUnmountSlides","bindEvents","off","destroy","translate","isBusy","currentSlide","indices","mountableSlideIndices","set","indexOf","unmount","capture","super","register","isEnabled"],"mappings":"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"}